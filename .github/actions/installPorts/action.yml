# yamllint disable rule:line-length
---
name: "Install MacPorts Ports"
inputs:
  ARCH:
    required: true
    type: string
  CROSS_COMPILE:
    required: true
    type: boolean
  PYVERS:
    required: true
    type: string
  PYDOTVERS:
    required: true
    type: string
  DBVERS:
    required: true
    type: string
  QTVERS:
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: "Bootstrap MacPorts"
      id: install_macports
      shell: bash
      env:
        GH_URL: "https://raw.githubusercontent.com"
        MP_URL: "GiovanniBussi/macports-ci/master/macports-ci"
      run: |
        if hash port 2>/dev/null; then
          echo "Macports is already installed"
        else
          PKGMGR_PREFIX=/opt/local
          echo "PKGMGR_PREFIX=$PKGMGR_PREFIX" >> $GITHUB_ENV
          curl -LJO "${GH_URL}/${MP_URL}"
          chmod +x macports-ci
          arch -${{ inputs.arch }} bash -c "source ./macports-ci install"
          export PATH=${PKGMGR_PREFIX}/bin:${PKGMGR_PREFIX}/libexec/${{ inputs.QTVERS }}/bin:${PKGMGR_PREFIX}/sbin:$PATH
          echo "PKGMGR_CMD=sudo $PKGMGR_PREFIX/bin/port" >> $GITHUB_ENV
        fi
    - name: "Remove Homebrew"
      id: remove_homebrew
      shell: bash
      env:
        GH_URL: "https://raw.githubusercontent.com"
        HB_URL: "Homebrew/install/HEAD/uninstall.sh"
      run: |
        if hash brew 2>/dev/null; then
          # now remove homebrew to prevent python conflicts
          /bin/bash -c "$(curl -fsSL ${GH_URL}/${HB_URL})" --force
          sudo rm -Rf /usr/local/bin/brew
        fi
    - name: "Setup Macports Environment"
      id: mp_env
      shell: bash
      run: |
        PKGMGR_CMD=$(which port)
        # If we're cross-compiling, we need to change this to the selected arch
        if $CROSS_COMPILE; then
          PKGMGR_CMD="sudo arch -${ARCH} $PKGMGR_CMD"
        else
          PKGMGR_CMD="sudo $PKGMGR_CMD"
        fi
        echo "PKGMGR_CMD=$PKGMGR_CMD" >> $GITHUB_ENV
        echo "PKGMGR_BIN=$PKGMGR_PREFIX/bin" >> $GITHUB_ENV
        export PATH=$PATH:$PKGMGR_BIN
    - name: "Install required support ports"
      id: install_req_ports
      shell: bash
      env:
        PYVERS: ${{ inputs.PYVERS }}
        PYDOTVERS: ${{ inputs.PYDOTVERS }}
        DBVERS: ${{ inputs.DBVERS }}
      run: |
        ${PKGMGR_CMD} -N install gsed \
          ccache \
          py${PYVERS}-ansible \
          py${PYVERS}-virtualenv \
          py${PYVERS}-pkgconfig \
          py${PYVERS}-setuptools \
          py${PYVERS}-pip \
          ${DBVERS}
        ${PKGMGR_CMD} select --set python python${PYVERS}
        ${PKGMGR_CMD} select --set python3 python${PYVERS}
        ${PKGMGR_CMD} select --set pip pip${PYVERS}
        ${PKGMGR_CMD} select --set pip3 pip${PYVERS}
        ${PKGMGR_CMD} select --set ansible py${PYVERS}-ansible
        ${PKGMGR_CMD} select --set virtualenv virtualenv${PYVERS}
        ANS_PB="${PKGMGR_BIN}/ansible-playbook-${PYDOTVERS}"
        if $CROSS_COMPILE; then
          ANS_PB="arch -${ARCH} $ANS_PB"
        fi
        echo "ANS_PB=$ANS_PB" >> $GITHUB_ENV
    - name: "Install required ports via ansible"
      id: ansible_install
      shell: bash
      env:
        PYDOTVERS: ${{ inputs.PYDOTVERS }}
        DBVERS: ${{ inputs.DBVERS }}
      run: |
        cd ansible
        echo "Installing ports via ansible playbook"
        export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$PKGMGR_PREFIX/lib/mysql8/pkgconfig/
        export MYSQLCLIENT_LDFLAGS=$(pkg-config --libs mysqlclient)
        export MYSQLCLIENT_CFLAGS=$(pkg-config --cflags mysqlclient)
        XTRA_VARS="ansible_python_interpreter=${PKGMGR_BIN}/python${PYDOTVERS} \
          database_version=${DBVERS}"
        if [ ${{ inputs.QTVERS }} == "qt5" ] || [ ${{ inputs.QTVERS }} == "qt@5" ]; then
          XTRA_VARS="$XTRA_VARS qt5=true"
        then
        ${ANS_PB} mythtv.yml --extra-vars="$XTRA_VARS" --limit=localhost
    - name: "Cleanup maports install"
      id: port_cleanup
      shell: bash
      run: |
        echo "Cleaning up macports builds"
        # force ownership for the users ansible / mythtv temp directories
        sudo chown $(id -u):$(id -g) ~/.ansible
        sudo chown $(id -u):$(id -g) ~/.virtualenvs
        sudo rm -rf ${PKGMGR_PREFIX}/var/macports/build/*
        sudo rm -rf ${PKGMGR_PREFIX}/var/macports/distfiles/*
